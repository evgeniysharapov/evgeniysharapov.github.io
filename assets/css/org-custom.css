/*----------------------------------------------------------------------
  Combined HTMLize and org-mode CSS classes 
 ----------------------------------------------------------------------*/
:root {
    --border: #ccc;
    --shadow: #eee;
    --lang-background: white;
    --lang-border: black;
}

/* * Regular Text Formatting
 */
.org-bold {
    /* bold */
    font-weight: bold;
}
.org-italic {
    /* italic */
    font-style: italic;
}
.org-bold-italic {
    /* bold-italic */
    font-weight: bold;
    font-style: italic;
}
.org-underline {
    /* underline */
    text-decoration: underline;
}

/* * Font-Lock 
*/
.org-builtin {
    /* font-lock-builtin-face */
    color: #0058B0;
}

.org-comment {
    /* font-lock-comment-face */
    color: #948072;
    font-style: italic;
}
.org-comment-delimiter {
    /* font-lock-comment-delimiter-face */
    color: #948072;
    font-style: italic;
}

.org-constant {
    /* font-lock-constant-face */
    color: #009B9B;
}
.org-doc {
    /* font-lock-doc-face */
    color: #A02D05;
}
.org-function-name {
    /* font-lock-function-name-face */
    color: #0000ff;
}
.org-keyword {
    /* font-lock-keyword-face */
    color: #720CAF;
}
.org-preprocessor {
    /* font-lock-preprocessor-face */
    color: #0058B0;
}
.org-regexp-grouping-backslash {
    /* font-lock-regexp-grouping-backslash */
    font-weight: bold;
}
.org-regexp-grouping-construct {
    /* font-lock-regexp-grouping-construct */
    font-weight: bold;
}
.org-string {
    /* font-lock-string-face */
    color: #A02D05;
}
.org-type {
    /* font-lock-type-face */
    color: #228b22;
}
.org-variable-name {
    /* font-lock-variable-name-face */
    color: #047B0D;
}
.org-warning-1 {
    /* font-lock-warning-face */
    color: #ff0000;
    font-weight: bold;
}

/* * Org-Mode Specific
 */
/* ** Source Code 
 */
pre {
    border: 1px solid var(--border);
    box-shadow: 3px 3px 3px var(--shadow);
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
}

pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
}

pre.src:before {
    display: none;
    position: absolute;
    background-color: var(--lang-background);
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid var(--lang-border);
}

pre.src:hover:before {
    display: inline;
}

/* Languages per Org manual */

pre.src-asymptote:before {
    content: 'Asymptote';
}

pre.src-awk:before {
    content: 'Awk';
}

pre.src-C:before {
    content: 'C';
}

pre.src-c:before {
    content: 'C/C++';
}

/* pre.src-C++ doesn't work in CSS */
pre.src-clojure:before {
    content: 'Clojure';
}

pre.src-css:before {
    content: 'CSS';
}

pre.src-D:before {
    content: 'D';
}

pre.src-ditaa:before {
    content: 'ditaa';
}

pre.src-dot:before {
    content: 'Graphviz';
}

pre.src-calc:before {
    content: 'Emacs Calc';
}

pre.src-emacs-lisp:before {
    content: 'Emacs Lisp';
}

pre.src-fortran:before {
    content: 'Fortran';
}

pre.src-gnuplot:before {
    content: 'gnuplot';
}

pre.src-haskell:before {
    content: 'Haskell';
}

pre.src-hledger:before {
    content: 'hledger';
}

pre.src-java:before {
    content: 'Java';
}

pre.src-js:before {
    content: 'Javascript';
}

pre.src-latex:before {
    content: 'LaTeX';
}

pre.src-ledger:before {
    content: 'Ledger';
}

pre.src-lisp:before {
    content: 'Lisp';
}

pre.src-lilypond:before {
    content: 'Lilypond';
}

pre.src-lua:before {
    content: 'Lua';
}

pre.src-matlab:before {
    content: 'MATLAB';
}

pre.src-mscgen:before {
    content: 'Mscgen';
}

pre.src-ocaml:before {
    content: 'Objective Caml';
}

pre.src-octave:before {
    content: 'Octave';
}

pre.src-org:before {
    content: 'Org mode';
}

pre.src-oz:before {
    content: 'OZ';
}

pre.src-plantuml:before {
    content: 'Plantuml';
}

pre.src-processing:before {
    content: 'Processing.js';
}

pre.src-python:before {
    content: 'Python';
}

pre.src-R:before {
    content: 'R';
}

pre.src-ruby:before {
    content: 'Ruby';
}

pre.src-sass:before {
    content: 'Sass';
}

pre.src-scheme:before {
    content: 'Scheme';
}

pre.src-screen:before {
    content: 'Gnu Screen';
}

pre.src-sed:before {
    content: 'Sed';
}

pre.src-sh:before {
    content: 'shell';
}

pre.src-sql:before {
    content: 'SQL';
}

pre.src-sqlite:before {
    content: 'SQLite';
}


/* additional languages in org.el's org-babel-load-languages alist */

pre.src-forth:before {
    content: 'Forth';
}

pre.src-io:before {
    content: 'IO';
}

pre.src-J:before {
    content: 'J';
}

pre.src-makefile:before {
    content: 'Makefile';
}

pre.src-maxima:before {
    content: 'Maxima';
}

pre.src-perl:before {
    content: 'Perl';
}

pre.src-picolisp:before {
    content: 'Pico Lisp';
}

pre.src-scala:before {
    content: 'Scala';
}

pre.src-shell:before {
    content: 'Shell Script';
}

pre.src-ebnf2ps:before {
    content: 'ebfn2ps';
}


/* additional language identifiers per \"defun org-babel-execute\"
       in ob-*.el */

pre.src-cpp:before {
    content: 'C++';
}

pre.src-abc:before {
    content: 'ABC';
}

pre.src-coq:before {
    content: 'Coq';
}

pre.src-groovy:before {
    content: 'Groovy';
}


/* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */

pre.src-bash:before {
    content: 'bash';
}

pre.src-csh:before {
    content: 'csh';
}

pre.src-ash:before {
    content: 'ash';
}

pre.src-dash:before {
    content: 'dash';
}

pre.src-ksh:before {
    content: 'ksh';
}

pre.src-mksh:before {
    content: 'mksh';
}

pre.src-posh:before {
    content: 'posh';
}


/* Additional Emacs modes also supported by the LaTeX listings package */

pre.src-ada:before {
    content: 'Ada';
}

pre.src-asm:before {
    content: 'Assembler';
}

pre.src-caml:before {
    content: 'Caml';
}

pre.src-delphi:before {
    content: 'Delphi';
}

pre.src-html:before {
    content: 'HTML';
}

pre.src-idl:before {
    content: 'IDL';
}

pre.src-mercury:before {
    content: 'Mercury';
}

pre.src-metapost:before {
    content: 'MetaPost';
}

pre.src-modula-2:before {
    content: 'Modula-2';
}

pre.src-pascal:before {
    content: 'Pascal';
}

pre.src-ps:before {
    content: 'PostScript';
}

pre.src-prolog:before {
    content: 'Prolog';
}

pre.src-simula:before {
    content: 'Simula';
}

pre.src-tcl:before {
    content: 'tcl';
}

pre.src-tex:before {
    content: 'TeX';
}

pre.src-plain-tex:before {
    content: 'Plain TeX';
}

pre.src-verilog:before {
    content: 'Verilog';
}

pre.src-vhdl:before {
    content: 'VHDL';
}

pre.src-xml:before {
    content: 'XML';
}

pre.src-nxml:before {
    content: 'XML';
}

/* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf \" \")) in .emacs */
pre.src-conf:before {
    content: 'Configuration File';
}
